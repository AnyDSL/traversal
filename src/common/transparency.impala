struct TransparencyMask {
    width: i32,
    height: i32,
    offset: i32,
}

fn clamp(x: f32, a: f32, b: f32) -> f32 {
    if x < a {
        a
    } else if x > b {
        b
    } else {
        x
    }
}

fn repeat(x: f32) -> f32 {
    let y = clamp(x - (x as i32 as f32), -1.0f, 1.0f);
    if y < 0.0f { y + 1.0f } else { y }
}

fn lookup_mask(mask: TransparencyMask, buffer: &[i8], u: f32, v: f32) -> bool {
    let x = ((mask.width  - 1) as f32 * repeat(u)) as i32;
    let y = ((mask.height - 1) as f32 * (1.0f - repeat(v))) as i32;
    buffer(mask.offset + mask.width * y + x) != 0i8
}
